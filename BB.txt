== Mechanical computation

The -- TODO lines are cases where termination could not be established
by the criteria employed in the program. Those criteria are simple loops,
and a family of terms W with W W ->> S[W W] for strict head contexts S,
generalizing the ω ω -> ω ω case, where ω = (\1 1), see below.

(n,BB(n),busy beaver)

(0,0,_)
(1,0,_)
(2,0,_)
(3,0,_)
(4,4,\1)
(5,0,_)
(6,6,\\1)
(7,7,\\2)
(8,8,\\\1)
(9,9,\\\2)
(10,10,\\\\1)
(11,11,\\\\2)
(12,12,\\\\\1)
(13,13,\\\\\2)
(14,14,\\\\\\1)
(15,15,\\\\\\2)
(16,16,\\\\\\\1)
(17,17,\\\\\\\2)
(18,18,\\\\\\\\1)
(19,19,\\\\\\\\2)
(20,20,\\\\\\\\\1)
(21,22,\(\1 1) (1 (\2)))
(22,24,\(\1 1 1) (1 1))
(23,26,\(\1 1) (1 (\\2)))
(24,30,\(\1 1 1) (1 (\1)))
(25,42,\(\1 1) (\1 (2 1)))
(26,52,(\1 1) (\\2 (1 2)))
(27,44,\\(\1 1) (\1 (2 1)))
(28,58,\(\1 1) (\1 (2 (\2))))
(29,223,\(\1 1) (\1 (1 (2 1))))
(30,160,(\1 1 1) (\\2 (1 2)))
(31,267,(\1 1) (\\2 (2 (1 2))))
-- TODO: (\1 (\2)) (\1 1 (\1 2))
(32,298,\(\1 1) (\1 (1 (2 (\2)))))
-- TODO: (\1 1) (\1 (\\1 (3 2)))
(33,1812,\(\1 1) (\1 (1 (1 (2 1)))))
-- TODO: (\1 1) (\\2 (\2 (3 1)))
-- TODO: \(\1 (\2)) (\1 1 (\1 2))
(34,327686,(\1 1 1 1) (\\2 (2 1)))
-- TODO: (\1 1) (\1 (\1 (\1) (2 1)))
-- TODO: (\1 1) (\1 (\1 (\\4) 1))
-- TODO: (\1 1) (\1 (\1 (\1) 2 1))
-- TODO: (\1 1) (\1 (\1) (\1 (2 1)))
-- TODO: (\1 1) (\1 (\\1 (2 1)) 1)
-- TODO: (\1 1 1) (\\2 (2 (1 2)))
-- TODO: (\1 1 1) (\\2 (2 (2 1)))
-- TODO: (\1 1 1) (\\1 1 (\1 2))
-- TODO: \(\1 1) (\1 (\\1 (3 2)))
(35,98421,(\1 (1 1)) (\\2 (2 (2 1))))
-- TODO: (\1 1) (\1 (1 (\\1 (3 1))))
-- TODO: (\1 1) (\1 (1 (\\2 (2 1))))
-- TODO: (\1 1) (\1 (\1 (2 (1 (\2)))))
-- TODO: (\1 1) (\1 (\1 (1 (\3) 1)))
-- TODO: (\1 1) (\1 (1 (\2)) (\1 2))
-- TODO: (\1 (\2)) (\1 1 (\1 2) 1)
-- TODO: (\1 1 1) (\\1 (1 (\3) 1))
-- TODO: (\1 1 1) (\\1 2 (\1 2))
-- TODO: (\1 1 1) (\\2 1 (\1 2))
-- TODO: (\1 1 1) (\\1 1 (\3) 1)
-- TODO: (\1 (1 (\2))) (\1 1 (\1 2))
-- TODO: (\1 (\2) 1) (\1 1 (\1 2))
-- TODO: (\\2 (\3)) (\1 1 (\1 2))
-- TODO: \(\1 1) (\\2 (\2 (3 1)))
-- TODO: \\(\1 (\2)) (\1 1 (\1 2))
(36,1441774,(\1 1) (\1 (\\2 (2 1)) 1))

== The set W

For this section we use ordinary lambda terms with names. Let

  T ::= v | \v. T | T T                       (terms)
  F ::= freeV | F T                           (free variable with arguments)
  S ::= □ | \v. S | S T | F S                 (strict head contexts)
  W^V ::= V | \v. B^({v} ∪ V)                 (ω-like terms)
  B^V ::= W^V X^V | \v. B^V | B^V T | F B^V   (⊥-like terms)
  X^V ::= W^V | B^V                           (ω-like or ⊥-like)
  W = W^{}
  B = B^{}
  X = X^{}

Observations

  V ⊆ V' implies W^V ⊆ W^V', B^V ⊆ B^V', and X^V ⊆ X^V'
  B^V = S[W^V X^V]
  S[□][v := T] ⊆ S
  W = \v. B^{v}
  ω ∈ W

Deeper Observation

  B^({v} ∪ V)[v := X^V] ⊆ B^V

Let V' = {v} ∪ V. We proceed by induction,
denoting the Induction Hypothesis step by [IH].

  W^V'[v := X^V]
    =     X^V ∪ V ∪ \w. B^({w} ∪ V')[v := X^V]
    ⊆[IH] X^V ∪ V ∪ \w. B^({w} ∪ V)
    =     X^V ∪ W^V = X^V

  B^V'[v := X^V]
    =     S[W^V'[v := X^V]  X^V'[v := X^V]]
    =     S[W^V'[v := X^V] (W^V'[v := X^V] ∪ B^V'[v := X^V]) ]
    ⊆[IH] S[X^V            (X^V            ∪ B^V)]
    =     S[(W^V ∪ B^V)    X^V]
    =     S[W^V X^V] ∪ S[B^V X^V]
    ⊆ B^V ∪ S[B^V] = B^V

Consequently,

  W X = (\v. B^{v}) X -> B^{v}[v := X] ⊆ B^{} = S[W X]

which shows that elements of W X have infinite head reductions and
therefore do not have a normal form.

== Manual proofs for n <= 34

Notation: t ... means t applied to an arbitrary number of arguments

-- for 32

-- TODO: (\1 (\2)) (\1 1 (\1 2))
Let T = \1 1 (\1 2)
If we denote \x. x A as <A>, and \_. x as K x, then
    (\1 (\2)) T
 -> T (K T)
 -> K T (K T) <K T>
 -> T <K T>
 -> <K T> <K T> <<K T>>
 -> <K T> (K T) <<K T>>
 -> K T (K T) <<K T>>
 -> T <<K T>>
 -> <<K T>> <<K T>> <<<K T>>>
 -> <<K T>> <K T> <<<K T>>>
 -> <K T> <K T> <<<K T>>>
 -> <K T> (K T) <<<K T>>>
 -> K T (K T) <<<K T>>>
 -> T <<<K T>>>
->> T <<<<K T>>>>
and so on.

-- for 33

-- TODO: (\1 1) (\1 (\\1 (3 2)))
If we denote \x. x A as <A>, then
T = \1 (\\1 (3 2)) = \x. x (\y. <x y>)
Denote T_0 = T, and T_{i+1} = T T_i = (\y. <T_i y>) = then
T T = T T_1 = T_1 T_2 = <T T_2> = <T_2 T_3> = <<T_1 T_3>> = <<<T T_3>>> and so on.

-- TODO: \(\1 1) (\1 (\3 (2 1)))
Let T = \1 (\3 (2 1))
Denoting the outermost variable by z, and function composition by (.),
let T_i = z^i . T, Then
    T T
 -> T T_1
 -> T_1 T_2
 =  z (T T_2)
 -> z (T_2 T_3)
 =  z^3 (T T_3)
 -> z^3 (T_3 T_4)
 =  z^6 (T T_4)
 -> z^6 (T_4 T_5)
 -> z^10 (T T_5)
and so on.

-- for 34

-- TODO: (\1 1) (\\2 (\2 (3 1)))
let T = \\2 (\2 (3 1))
Denoting function composition by (.), we have T x y = x (y.x)
(\1 1) T  = T T = \y. T (y.T) = \y\z. y (T (z.y.T)) = \y\z. y (\w. z (y (T (w.z.y.T)))) and so on.

-- TODO: \(\1 (\2)) (\1 1 (\1 2))
see subterm at 32

-- for 35

-- TODO: (\1 1) (\1 (\1 (\1) (2 1)))
let T = \x.x (\y.y I (x y))
let T_0 = T and T_{i+1} = \y.y I (T_i y)
T_{i+1} I = I I (T_i I) = T_i I =* T I = \y.y I y
T_{i+1} T_j = T_j I (T_i T_j) = T_i T_j I (T_i T_j) =* T T_j ...
T T_i = T_i T_{i+1} =* T T_{i+1} ...
T T = T T_1 = T T_2 ... etc.

-- TODO: (\1 1) (\1 (\1 (\\4) 1))
let T = \x.x (\y.y (K^2 x) y)
let T_0 = T and T_{i+1} = \y.y (K^2 T_i) y
T_{i+1} T_j = T_j (K^2 T_i) T_j = K^2 T_i (K^2 T_{j-1}) (K^2 T_i) T_j I = T_i T_j =* T T_j
T T_i = T_i T_{i+1} =* T T_{i+1}
T T = T T_1 = T T_2 etc.

-- TODO: (\1 1) (\1 (\1 (\1) 2 1))
let T = \x.x (\y.y I x y)
let T_0 = T and T_{i+1} = \y.y I T_i y
T_{i+1} I = I I T_i I = T_i I =* T I = \y.y I I y
T_{i+1} T_j = T_j I T_i T_j = T_i I I T_i T_j = T_i T_j =* T T_j
T T_i = T_i T_{i+1} =* T T_{i+1}
T T = T T_1 = T T_2 etc.

-- TODO: (\1 1) (\1 (\1) (\1 (2 1)))
let T = \x.x I (\y.y (x y))
let T_0 = T and T_{i+1} = \y.y (T_i y)
T_{i+1} I = I (T_i I) = T_i I =* T I = \y.y y
T_{i+1} T_j = T_j (T_i T_j) = T_i T_j (T_{j-1} (T_i T_j)) = T_i T_j ... =* T T_j ...
T T_i = T_i I T_{i+1} = T_{i+1} T_{i+1} =* T T_{i+1} ...
T T =* T T1 ... =* T T_2 ...  etc.

-- TODO: (\1 1) (\1 (\\1 (2 1)) 1)
let U = \y\z.z (y z), T = \x.x U x, and T_i = U^i T
for j > 0
  T_{i+1} U T_j = U T_i U T_j = U (T_i U) T_j = T_j (T_i U T_j) = U T_{j-1} (T_i U T_j) = T_i U T_j ... =* T U T_j ...
  T_{i+1} T_j = U T_i T_j = T_j (T_i T_j) = U T_{j-1} (T_i T_j) = T_i T_j ... =* T T_j ...
for i > 0
  T T_i = T_i U T_i =* T U T_i ...
  T U T_i = U U U T_i = U (U U) T_i = T_i (U U T_i) = U T_{i-1} (U U T_i) = U U T_i ...
  U U T_i = T_i T_{i+1} =* T T_{i+1} ...
(\1 1) T = T T = T U T = U U U T = U (U U) T = T (U U T) = U U T ...
U U T = T (U T) = T T_1 =* T T_2 ... =* T T_3 ... etc.

-- TODO: (\1 1 1) (\\2 (2 (1 2)))
has Normal Form of size 4186155666, as reported by ./blc nf_size

-- TODO: (\1 1 1) (\\2 (2 (2 1)))
Church numeral 3^3^3 = 3^27 of size 5*3^27+6 = 38127987424941

-- TODO: (\1 1 1) (\\1 1 (\1 2))
  If we denote \x. x A as <A>, then
  T = \\1 1 (\1 2) = \_\x. x x <x>
  T T T = T T <T> = <T> <T> <<T>> = <T> T <<T>> = T T <<TT>> = <<T>> <<T>> <<<T>>> =* T T <<<T>>> etc.

-- TODO: \(\1 1) (\1 (\\1 (3 2)))
see subterm at 33

-- TODO: \\(\1 1) (\1 (\3 (2 1)))
see subterm at 33

-- for 36

-- TODO: (\1 1) (\1 (1 (\\1 (3 1)))) T_{i+1} T_j done on paper
-- TODO: (\1 1) (\1 (1 (\\2 (2 1)))) Church numeral 2^256 of size 578960446186580977117854925043439539266349923328202820197287920039565648199686
-- TODO: (\1 1) (\1 (\1 (2 (1 (\2))))) done on paper
-- TODO: (\1 1) (\1 (\1 (1 (\3) 1))) done on paper
-- TODO: (\1 1) (\1 (1 (\2)) (\1 2)) done on paper
-- TODO: (\1 (\2)) (\1 1 (\1 2) 1) entirely similar to subterm at 32
-- TODO: (\1 1 1) (\\1 (1 (\3) 1)) done on paper
-- TODO: (\1 1 1) (\\1 2 (\1 2)) done on paper
-- TODO: (\1 1 1) (\\2 1 (\1 2)) done on paper
-- TODO: (\1 1 1) (\\1 1 (\3) 1) done on paper
-- TODO: (\1 (1 (\2))) (\1 1 (\1 2)) see subterm at 32
-- TODO: (\1 (\2) 1) (\1 1 (\1 2)) see subterm at 32
-- TODO: (\\2 (\3)) (\1 1 (\1 2)) see subterm at 32
-- TODO: \(\1 1) (\2 (1 (\1 (2 1)))) done on paper
-- TODO: \(\1 1) (\2 (1 (\2 1 1))) done on paper
-- TODO: \(\1 1) (\2 (1 (\\3 2))) done on paper
-- TODO: \(\1 1) (\\2 (\2 (3 1))) see subterm at 34
-- TODO: \\(\1 1) (\1 (\4 (2 1))) done on paper
-- TODO: \\(\1 (\2)) (\1 1 (\1 2)) see subterm at 32
