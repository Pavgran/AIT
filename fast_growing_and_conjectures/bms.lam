let BMS = let
  0 = \f\x. x;
  1 = \f. f;
  notZero = \n\a\b. n (\u.a) b;
  pred = \n\f\x. n (\g\h.h (g f))(\u.x)(\u.u);
  gt = \x\y. notZero (y pred x); -- greater than
  succ = \n\f\x. f (n f x);

  expand = \mod\m\i. let m1 = m 1 in
    gt i m1
      (m (m1 pred (succ i)))    --  copy array element i+1 - m1
      (let msis = m (succ i) succ;  in msis (
        notZero i
          (gt (msis i) (m1 succ mod) m1 0)
          (pred (m i))));        -- new array length = old length - 1 + m1

  matrix0 = \n\k. gt k n 0 n;    -- single column of n n's

  -- bms
  in \rows. let
    bms = \matrix\mod. notZero (matrix 0) (succ (bms (expand mod matrix) (pred (notZero mod mod rows)))) mod
  in bms (matrix0 rows) (pred rows);

  2 = \f\x. f (f x)
in 2 2 BMS 2                      -- 516 bits; 64.5 bytes

--						G | B0 | C

-- 2 2             = (0,0)(1,1)			| 0 | 1
--  2                (0,0)(2,2)			| 0 | 1

-- 2 0 2           = (0,0)(1,0)(2)		0 | 1 | 2
--  3                (0,0)(2,0)(2)		0 | 0 |

-- 0 4 0 2         = (0,0)(1,0)(1,0)		| 0 1 | 1
--  4                (0,0)(2,0)(4,0)		| 0 0 | 0

-- 4 0 2           = (0,0)(1,0)(1)		| 0 1 | 1
--  3                (0,0)(2,0)(4)		| 0 0 |

-- 0 2 0 0 0 2     = (0,0)(1,0)(0,0)(1,0)	0 1 | 0 | 1
--  6                (0,0)(2,0)(0,0)(2,0)	0 0 | 0 | 0

-- 2 0 0 0 2       = (0,0)(1,0)(0,0)(1)		0 1 | 0 | 1
--  5                (0,0)(2,0)(0,0)(2)		0 0 | 0 |

-- 0 0 0 0 0 2     = (0,0)(1,0)(0,0)(0,0)	0 1 0 | 0
--  6                (0,0)(2,0)(0,0)(0,0)	0 0 0 | 0

-- 0 0 0 0 2       = (0,0)(1,0)(0,0)(0)		0 1 0 | 0
--  5                (0,0)(2,0)(0,0)(0)		0 0 0 |

-- 0 0 0 2         = (0,0)(1,0)(0,0)		0 1 | 0
--  4                (0,0)(2,0)(0,0)		0 0 | 0

-- 0 0 2           = (0,0)(1,0)(0)		0 1 | 0
--  3                (0,0)(2,0)(0)		0 0 |

-- 0 2             = (0,0)(1,0)			0 | 1
--  2                (0,0)(2,0)			0 | 0

-- 2               = (0,0)(1)			| 0 | 1
--  1                (0,0)(2)			| 0 |

-- 0 0             = (0,0)(0,0)			| 0
--  2                (0,0)(0,0)			| 0

-- 0               = (0,0)(0)			| 0
--  1                (0,0)(0)			|

-- HALT            = (0,0)			|
--  0                (0,0)			|
