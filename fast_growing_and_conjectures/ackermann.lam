-- possibly shortest example (29 bits) of non-primitive recursive function
-- a close relative of Ackermann function
let
  0 = \f\x.x;
  1 = \x.x;
  2 = \f\x.f (f x);
  3 = \f\x.f (f (f x));
  ackify = \f\n.n f n;
  ackerlike = \n.n ackify n n
in ackerlike 3


-- term of size 47 bits
-- ackerlike 2 =
-- 2 ackify 2 2 =
-- ackify (ackify 2) 2 =
-- 2 (ackify 2) 2 =
-- ackify 2 (ackify 2 2) =
-- ackify 2 (4 2) =
-- ackify 2 16 =
-- 16 2 16 = 2^16 16 = 16^2^16 = 2^2^18

-- term of size 52 bits
-- ackerlike 3 =
-- ackify (ackify (\n.n 3 n))) 3 =
-- HUGE tower of exponentials
