\io. let

  -- Let mx = 2^n - 1. We consider a dual version of the shelf, determined
  -- by a |> mx = a-1 (mod 2^n), which satisfies
  --   0 |> b  = b
  --   a |> 0  = 0
  --   a |> mx = a-1
  --   a |> b  = (a |> b+1) |> a-1
  -- Note that the latter two equations iterate f_a = \x. x |> (a-1).
  -- In fact, we implement a |> b = f_a^{mx-b} (a-1) as f_a^{mx*b} 0,
  -- exploiting the fact that a |> mx = a-1 = 0 |> a-1 = f_a 0
  -- and (modulo 2^n) 1+mx-b = -b = -1 * b = mx*b

  zero = \f\x. x;
  one = \x. x;
  true = \t\f. t;
  false = \t\f. f;
  two = \f\x. f (f x);
  three = \f\x. f (f (f x));
  eight = three two;
  sixteen = (\x. x x x) two;
  pred = \n\f\x. n (\g\h. h (g f)) (\h. x) (\x. x);
  laver = \mx.
    -- swap argument order to simplify iterated laver
    let laver = \b\a. a (\_. mx (b (laver (pred a))) zero) b
    in laver;
  sweet = sixteen;
  dblp1 = \n\f\x. n f (n f (f x)); -- map n to 2*n+1
  go1 = \mx\p. p
    (laver mx sweet mx (\_. false) true)
    (go1 (dblp1 mx));
  go2 = \mx. laver mx sweet mx (\_. mx) (go2 (dblp1 mx));
in
  -- output: list of bits; the n-th bit is true if P(n) divides 16 (n=1,2,...)
  -- go1 one
  -- version without output that halts if a counterexample is found
  go2 one
